# Generated by Django 4.1 on 2022-08-28 17:29

from django.db import migrations

def challenge_3(apps, schema_editor):
    Challenge = apps.get_model('server', 'Challenge')
    chall = Challenge(
        name='kNN classification',
        priority=10,
        minimal_version="0.0.10",
        validator="algo_knn_class",
        description="""# Let's do some classification!
Your API has now been well setup!

Let's now try to do our first training.
We will use a simple algorithm, the KNN classifier.
The server will send to your API a payload with features (as `X`) and classes (as `Y`).
It will also send a test value with its features.
Example payload:
```
{
  "X": [ [1, 2], [2, 3], ...],
  "Y": [ [0], [1], ... ],
  "test_value": [1 ,3]
}
```

## Goal

You will have to return the predicted class with the precision associated.
```
{
  "predicted_class": 0,
  "precision": 0.8
}
```

The KNN algorithm will be configured to used 5 neighbors.
""",
    )
    chall.save()

class Migration(migrations.Migration):

    dependencies = [
        ('server', '0012_challenge_2_update_lore'),
    ]

    operations = [
        migrations.RunPython(challenge_3),
    ]
