# Generated by Django 4.1 on 2022-09-21 18:37

from django.db import migrations

name='Decision Tree Regression'

def challenge(apps, schema_editor):
    Challenge = apps.get_model('server', 'Challenge')
    chall = Challenge(
        name=name,
        priority=22,
        minimal_version="0.0.22",
        validator="algo_decision_tree_reg",
        description="""# Decision tree regression
Well played with the linear regression!

This time, we will impelement the `DecisionTreeRegressor`!
Using the same payload as before, but with the random state set to your team ID, implement the endpoint `/algo/decision-tree/reg`.

## Goal

You will have to return the predicted value and its score.
```
{
  "predicted_value": 0.2,
  "score": 0.8
}
```
""",
    )
    chall.save()

def reverse_challenge(apps, schema_editor):
    Challenge = apps.get_model('server', 'Challenge')
    challs = Challenge.objects.filter(name=name)
    for chall in challs:
        chall.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('server', '0021_challenge_prio_21'),
    ]

    operations = [
        migrations.RunPython(challenge, reverse_challenge)
    ]
