# Generated by Django 4.1 on 2022-09-18 15:15

from django.db import migrations

name='Multi Layer Perceptron Classification'

def challenge(apps, schema_editor):
    Challenge = apps.get_model('server', 'Challenge')
    chall = Challenge(
        name=name,
        priority=15,
        minimal_version="0.0.15",
        validator="algo_mlp_class",
        description="""# Multi Layer Perceptron Classification!
Well done with the SVM!

Let's now do some neural networks!
We will use the `MLPClassifier`.

Using the same settings as the previous challenge an the same payload as before, create an endpoint on `/algo/mlp/class`.

## Goal

You will have to return the predicted class and its precision.
```
{
  "predicted_class": 0,
  "precision": 0.8
}
```
""",
    )
    chall.save()

def reverse_challenge(apps, schema_editor):
    Challenge = apps.get_model('server', 'Challenge')
    challs = Challenge.objects.filter(name=name)
    for chall in challs:
        chall.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('server', '0018_challenge_prio_14'),
    ]

    operations = [
        migrations.RunPython(challenge, reverse_challenge)
    ]
