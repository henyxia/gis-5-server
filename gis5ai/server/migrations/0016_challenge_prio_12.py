# Generated by Django 4.1 on 2022-09-18 15:15

from django.db import migrations

name='Deicision tree classification'

def challenge_12(apps, schema_editor):
    Challenge = apps.get_model('server', 'Challenge')
    chall = Challenge(
        name=name,
        priority=12,
        minimal_version="0.0.12",
        validator="algo_decision_tree_class",
        description="""# Decision Tree classification!
The linear classificator is done, well played!

Let's try the implementing the decision tree now.

Using the default settings and the same payload as before, create an endpoint on `/algo/decision-tree/class`.

## Goal

You will have to return the predicted class with the precision associated.
```
{
  "predicted_class": 0,
  "precision": 0.8
}
```
""",
    )
    chall.save()

def reverse_challenge(apps, schema_editor):
    Challenge = apps.get_model('server', 'Challenge')
    challs = Challenge.objects.filter(name=name)
    for chall in challs:
        chall.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('server', '0015_challenge_prio_11'),
    ]

    operations = [
        migrations.RunPython(challenge_12, reverse_challenge)
    ]
