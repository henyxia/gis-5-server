# Generated by Django 4.1 on 2022-09-18 15:15

from django.db import migrations

name='KNN Regression'

def challenge(apps, schema_editor):
    Challenge = apps.get_model('server', 'Challenge')
    chall = Challenge(
        name=name,
        priority=20,
        minimal_version="0.0.20",
        validator="algo_knn_reg",
        description="""# k Nearest Neighbors regression!
Well played with the perceptrons!

That's it for the classification introduction.
We are now going to work on the same algorithms, but using them for regressions instead.
We will start with the famous kNN regression with its default settings.

The payload will be the same as before.

The endpoint to create is `/algo/knn/regressor`.

## Goal

You will have to return the predicted class and its score.
```
{
  "predicted_class": 0,
  "score": 0.8
}
```
""",
    )
    chall.save()

def reverse_challenge(apps, schema_editor):
    Challenge = apps.get_model('server', 'Challenge')
    challs = Challenge.objects.filter(name=name)
    for chall in challs:
        chall.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('server', '0019_challenge_prio_15'),
    ]

    operations = [
        migrations.RunPython(challenge, reverse_challenge)
    ]
