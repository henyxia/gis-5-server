# Generated by Django 4.1 on 2022-09-18 15:15

from django.db import migrations

name='Linear Support Vector Classification'

def challenge(apps, schema_editor):
    Challenge = apps.get_model('server', 'Challenge')
    chall = Challenge(
        name=name,
        priority=14,
        minimal_version="0.0.14",
        validator="algo_linear_svc",
        description="""# Linear Support Vector Classification!
That's all for the trees, well done!

We will now work on SVM kernels.
To do so, we will use the LinearSVC.

Using the same settings as the previous challenge an the same payload as before, create an endpoint on `/algo/svm/class`.

## Goal

You will have to return the predicted class and its score.
```
{
  "predicted_class": 0,
  "score": 0.8
}
```
""",
    )
    chall.save()

def reverse_challenge(apps, schema_editor):
    Challenge = apps.get_model('server', 'Challenge')
    challs = Challenge.objects.filter(name=name)
    for chall in challs:
        chall.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('server', '0017_challenge_prio_13'),
    ]

    operations = [
        migrations.RunPython(challenge, reverse_challenge)
    ]
